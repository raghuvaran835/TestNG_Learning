<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="3" total="13" passed="9" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-02-19T09:54:37 IST" name="Loan Department" finished-at="2023-02-19T09:54:37 IST" duration-ms="251">
    <groups>
      <group name="Smoke">
        <method signature="Demo2.webLoginHomeLoan()[pri:0, instance:Test.Demo2@449a4f23]" name="webLoginHomeLoan" class="Test.Demo2"/>
        <method signature="Demo.test_01()[pri:0, instance:Test.Demo@130c12b7]" name="test_01" class="Test.Demo"/>
      </group> <!-- Smoke -->
    </groups>
    <test started-at="2023-02-19T09:54:37 IST" name="Personal Loan" finished-at="2023-02-19T09:54:37 IST" duration-ms="124">
      <class name="Test.Demo2">
        <test-method is-config="true" signature="preTest()[pri:0, instance:Test.Demo2@449a4f23]" started-at="2023-02-19T09:54:37 IST" name="preTest" finished-at="2023-02-19T09:54:37 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preTest -->
        <test-method is-config="true" signature="beforeMethod_tc()[pri:0, instance:Test.Demo2@449a4f23]" started-at="2023-02-19T09:54:37 IST" name="beforeMethod_tc" finished-at="2023-02-19T09:54:37 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod_tc -->
        <test-method signature="mobileLoginHomeLoan(java.lang.String,java.lang.String)[pri:0, instance:Test.Demo2@449a4f23]" started-at="2023-02-19T09:54:37 IST" name="mobileLoginHomeLoan" data-provider="getData" finished-at="2023-02-19T09:54:37 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firstUsername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[firstPassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mobileLoginHomeLoan -->
        <test-method is-config="true" signature="afterMethod_tc()[pri:0, instance:Test.Demo2@449a4f23]" started-at="2023-02-19T09:54:37 IST" name="afterMethod_tc" finished-at="2023-02-19T09:54:37 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod_tc -->
        <test-method signature="mobileLoginHomeLoan(java.lang.String,java.lang.String)[pri:0, instance:Test.Demo2@449a4f23]" started-at="2023-02-19T09:54:37 IST" name="mobileLoginHomeLoan" data-provider="getData" finished-at="2023-02-19T09:54:37 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Second Username]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Second Password]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mobileLoginHomeLoan -->
        <test-method is-config="true" signature="beforeMethod_tc()[pri:0, instance:Test.Demo2@449a4f23]" started-at="2023-02-19T09:54:37 IST" name="beforeMethod_tc" finished-at="2023-02-19T09:54:37 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod_tc -->
        <test-method is-config="true" signature="afterMethod_tc()[pri:0, instance:Test.Demo2@449a4f23]" started-at="2023-02-19T09:54:37 IST" name="afterMethod_tc" finished-at="2023-02-19T09:54:37 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod_tc -->
        <test-method is-config="true" signature="beforeMethod_tc()[pri:0, instance:Test.Demo2@449a4f23]" started-at="2023-02-19T09:54:37 IST" name="beforeMethod_tc" finished-at="2023-02-19T09:54:37 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod_tc -->
        <test-method signature="mobileLoginHomeLoan(java.lang.String,java.lang.String)[pri:0, instance:Test.Demo2@449a4f23]" started-at="2023-02-19T09:54:37 IST" name="mobileLoginHomeLoan" data-provider="getData" finished-at="2023-02-19T09:54:37 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Third Username]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Third Password]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mobileLoginHomeLoan -->
        <test-method is-config="true" signature="afterMethod_tc()[pri:0, instance:Test.Demo2@449a4f23]" started-at="2023-02-19T09:54:37 IST" name="afterMethod_tc" finished-at="2023-02-19T09:54:37 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod_tc -->
        <test-method signature="webLoginHomeLoan()[pri:0, instance:Test.Demo2@449a4f23]" started-at="2023-02-19T09:54:37 IST" name="webLoginHomeLoan" finished-at="2023-02-19T09:54:37 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- webLoginHomeLoan -->
        <test-method is-config="true" signature="beforeMethod_tc()[pri:0, instance:Test.Demo2@449a4f23]" started-at="2023-02-19T09:54:37 IST" name="beforeMethod_tc" finished-at="2023-02-19T09:54:37 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod_tc -->
        <test-method is-config="true" signature="afterMethod_tc()[pri:0, instance:Test.Demo2@449a4f23]" started-at="2023-02-19T09:54:37 IST" name="afterMethod_tc" finished-at="2023-02-19T09:54:37 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod_tc -->
        <test-method signature="APILoginHomeLoan()[pri:0, instance:Test.Demo2@449a4f23]" started-at="2023-02-19T09:54:37 IST" name="APILoginHomeLoan" finished-at="2023-02-19T09:54:37 IST" depends-on-methods="Test.Demo2.webLoginHomeLoan" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- APILoginHomeLoan -->
        <test-method is-config="true" signature="beforeMethod_tc()[pri:0, instance:Test.Demo2@449a4f23]" started-at="2023-02-19T09:54:37 IST" name="beforeMethod_tc" finished-at="2023-02-19T09:54:37 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod_tc -->
        <test-method is-config="true" signature="afterMethod_tc()[pri:0, instance:Test.Demo2@449a4f23]" started-at="2023-02-19T09:54:37 IST" name="afterMethod_tc" finished-at="2023-02-19T09:54:37 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod_tc -->
        <test-method is-config="true" signature="postTest()[pri:0, instance:Test.Demo2@449a4f23]" started-at="2023-02-19T09:54:37 IST" name="postTest" finished-at="2023-02-19T09:54:37 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postTest -->
      </class> <!-- Test.Demo2 -->
      <class name="Test.Demo1">
        <test-method signature="test_03(java.lang.String)[pri:0, instance:Test.Demo1@76a4ebf2]" started-at="2023-02-19T09:54:37 IST" name="test_03" finished-at="2023-02-19T09:54:37 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://personal_loan.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_03 -->
      </class> <!-- Test.Demo1 -->
      <class name="Test.Demo">
        <test-method signature="test_01()[pri:0, instance:Test.Demo@130c12b7]" started-at="2023-02-19T09:54:37 IST" name="test_01" finished-at="2023-02-19T09:54:37 IST" duration-ms="18" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1577)
at org.testng.Assert.assertTrue(Assert.java:56)
at org.testng.Assert.assertTrue(Assert.java:66)
at Test.Demo.test_01(Demo.java:11)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_01 -->
        <test-method signature="test_02()[pri:0, instance:Test.Demo@130c12b7]" started-at="2023-02-19T09:54:37 IST" name="test_02" finished-at="2023-02-19T09:54:37 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_02 -->
      </class> <!-- Test.Demo -->
    </test> <!-- Personal Loan -->
    <test started-at="2023-02-19T09:54:37 IST" name="Car Loan" finished-at="2023-02-19T09:54:37 IST" duration-ms="14">
      <class name="Test.Demo3">
        <test-method is-config="true" signature="beforeClassTest()[pri:0, instance:Test.Demo3@16eb3ea3]" started-at="2023-02-19T09:54:37 IST" name="beforeClassTest" finished-at="2023-02-19T09:54:37 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassTest -->
        <test-method signature="APILoginCarLoan()[pri:0, instance:Test.Demo3@16eb3ea3]" started-at="2023-02-19T09:54:37 IST" name="APILoginCarLoan" finished-at="2023-02-19T09:54:37 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- APILoginCarLoan -->
        <test-method signature="webLoginCarLoan()[pri:0, instance:Test.Demo3@16eb3ea3]" started-at="2023-02-19T09:54:37 IST" name="webLoginCarLoan" finished-at="2023-02-19T09:54:37 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- webLoginCarLoan -->
        <test-method is-config="true" signature="afterClassTest()[pri:0, instance:Test.Demo3@16eb3ea3]" started-at="2023-02-19T09:54:37 IST" name="afterClassTest" finished-at="2023-02-19T09:54:37 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassTest -->
      </class> <!-- Test.Demo3 -->
      <class name="Test.Demo1">
        <test-method is-config="true" signature="beforesuit_tc()[pri:0, instance:Test.Demo1@76a4ebf2]" started-at="2023-02-19T09:54:37 IST" name="beforesuit_tc" finished-at="2023-02-19T09:54:37 IST" duration-ms="12" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforesuit_tc -->
        <test-method is-config="true" signature="afterSuit_tc()[pri:0, instance:Test.Demo1@76a4ebf2]" started-at="2023-02-19T09:54:37 IST" name="afterSuit_tc" finished-at="2023-02-19T09:54:37 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuit_tc -->
      </class> <!-- Test.Demo1 -->
    </test> <!-- Car Loan -->
  </suite> <!-- Loan Department -->
</testng-results>
